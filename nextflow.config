// General configuration used in all profiles
manifest {
  description = 'TCGA Cancer Driver Genes Benchmark Workflow' 
}

// Profiles configure nextflow depending on the environment (local, integration, live, etc.)

profiles {

	  standard {
    process {
         withName: validation{
          container = "tcga_validation:1.0"
         }
    }
    process {
        withName: compute_metrics{
        container = "tcga_metrics:1.0"
       }
    }
    process {
        withName: benchmark_consolidation{
        container = "tcga_consolidation:1.0"
     }
    }
    docker{
      enabled = true
      // set time zone for running docker containers
      runOptions = '-e TZ=Europe/Madrid'
    }
    
  }
}

// default parameter values

params  {

  // submitted file
  predictionsFile = "$baseDir/TCGA_sample_data/All_Together.txt"

  // reference file dir to validate input data
  public_ref_dir = "$baseDir/TCGA_sample_data/public_ref"

  // name of the tool used for the predicitions
  participant_name = "my_gene_predictor"

  // directory where the 'gold standards' are found
  metrics_ref_dir = "$baseDir/TCGA_sample_data/metrics_ref_datasets"

  // cancer types for which the benchmark has to be performed
  challenges_ids  = "ACC BRCA"

  // directory where TCGA benchmarking data is found
  assess_dir = "$baseDir/TCGA_sample_data/data"

  //name or OEB permanent ID for the benchmarking community
  community_id = "TCGA"

  // Boolean operator: if set to CLOSED the whole workflow is executed; if OPEN, metrics are computed but aggregation/consolidation is not performed
  // challenge_status = "CLOSED"

  // directories where results will be written
  validation_result = "sample_out/participant_out"
  assessment_results = "sample_out/assessment_out"
  aggregation_results = "sample_out/results"
  statistics_results = "sample_out/stats"
  data_model_export_dir = "sample_out/benchmarking_data_model_export"
  otherdir = "sample_out/other"

}

// By default output execution reports
timeline {
  enabled = true
  file = "${params.statistics_results}/timeline.html"
}
report {
  enabled = true
  file = "${params.statistics_results}/report.html"
}
trace {
  enabled = true
  file = "${params.statistics_results}/trace.txt"
}
dag {
  enabled = true
  file = "${params.statistics_results}/DAG.dot"
}
